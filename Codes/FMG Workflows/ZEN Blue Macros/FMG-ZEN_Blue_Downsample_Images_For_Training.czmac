<?xml version="1.0" encoding="utf-8"?>
<Script>
  <Context>Zen26</Context>
  <Version>1.0</Version>
  <Language>Python</Language>
  <Text>#######################################################
## DOWNSAMPLE IMAGES BEFORE INTELLESIS TRAINING IN ZEN BLUE
##
## Macro name: FMG-ZEN_Blue_Downsample_Images_For_Training.czmac
## 
## Author: APAC Digital Solutions Team
##
## GUI TO SELECT THE SOURCE FOLDER OF IMAGES AND DOWNSAMPLING 
## PARAMETER AND DESTINATION FOLDER TO SAVE THE DOWNSAMPLED IMAGES
##
## Copyright (c) 2021 by Carl Zeiss Microscopy GmbH.
## Permission is granted to use, modify and distribute this code,
## as long as this copyright notice remains part of the code.
#######################################################


## Import required libraries
from System.IO import File, Directory, FileInfo, Path
import re
import os

## Remove all open documents
Zen.Application.Documents.RemoveAll()

## Set up GUI for user to select the downsampling options and folder of images
GUIDialog = ZenWindow()
GUIDialog.Initialize('Select Downsampling Options Before Intellesis Training')
GUIDialog.AddFolderBrowser('source_folder','Image folder','C:\Users\Public\Pictures')
GUIDialog.AddDropDown('bin_options', 'Select Downsampling Parameter', ['1x1','2x2','3x3','4x4','5x5','6x6','7x7','8x8','9x9', '10x10'], 0)
GUIDialog.AddFolderBrowser('dest_folder','Destination folder','C:\Users\Public\Pictures')

## Show the GUI window
result = GUIDialog.Show()
## Print message if the macro is cancelled
if result.HasCanceled:
   message = 'Macro was canceled by user.'
   print(message)
   raise SystemExit
   ##
   ## Else execute the macro
else:
   ## Get the values from GUI dialog and store them
   source_folder =  str(result.GetValue('source_folder'))
   bin_options = str(result.GetValue('bin_options'))
   dest_folder =  str(result.GetValue('dest_folder'))

files = Directory.GetFiles(source_folder, '*.czi')
## Check, if image type exists
if files.Length == 0: 
    strMessage = 'Images of type CZI do not exist!\nRestart macro and select a folder with CZI images!'
    sys.exit(strMessage)
##
## loop over all CZI images in the folder
for i in range(0,files.Length):
    file = files[i]
    fileInfo = FileInfo(file)
    PathAndFile = Path.Combine(source_folder, fileInfo.Name)
    image = Zen.Application.LoadImage(PathAndFile,False)
    # The following command has to be activated, if each image should be displayed
    Zen.Application.Documents.Add(image)
    
    ## Applying image downsampling options
    bin_options_int = [int(s) for s in re.findall(r'-?\d+\.?\d*', bin_options)]
    #print(bin_options_float)
    bin_options_int_x = int(bin_options_int[0])
    bin_options_int_y = int(bin_options_int[1])
    down_sampled_image = Zen.Processing.Transformation.Geometric.SampleDown(image,ZenThirdProcessingDimension.None, bin_options_int_x, bin_options_int_y, 1, False)
    down_sampled_image.Save(dest_folder+r'/'+os.path.splitext(fileInfo.Name)[0]+'_downsampled_'+bin_options+'.czi')
    ## Close image (otherwise it cannot be deleted in explorer)
    image.Close()

Zen.Application.Pause('Downsampling of images is finished. \nDownsampled images are in ' + dest_folder+'. \nNow please proceed to Intellesis Training.')
##
########################################################################################################
</Text>
  <Author></Author>
  <Description></Description>
  <Keywords></Keywords>
  <Row>68</Row>
  <Column>80</Column>
</Script>